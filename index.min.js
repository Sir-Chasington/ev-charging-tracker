const chargeHistory=JSON.parse(localStorage.getItem("chargeHistory"))||[];let totalCost=chargeHistory.reduce((sum,entry)=>sum+entry.cost,0);function initializeCarMake(){const carMake=localStorage.getItem("carMake");const carMakeInput=document.getElementById("carMake");const carMakeDisplay=document.getElementById("carMakeDisplay");if(carMake){carMakeInput.style.display="none";carMakeDisplay.style.display="inline";carMakeDisplay.textContent=carMake}else{carMakeInput.style.display="inline";carMakeDisplay.style.display="none"}}function saveCarMake(){const carMakeInput=document.getElementById("carMake");const carMake=carMakeInput.value.trim();if(carMake){localStorage.setItem("carMake",carMake);initializeCarMake()}}function toggleEndPercentage(){const chargeToFull=document.getElementById("chargeToFull").checked;const endPercentageContainer=document.getElementById("endPercentageContainer");if(chargeToFull){endPercentageContainer.style.display="none"}else{endPercentageContainer.style.display="block"}}function renderHistory(){const tableBody=document.getElementById("chargeHistory");tableBody.innerHTML="";chargeHistory.forEach((entry,index)=>{const row=document.createElement("tr");row.innerHTML=`
      <td>${entry.date}</td>
      <td>${entry.kWh.toFixed(2)} kWh</td>
      <td>${entry.percentCharged}% charged</td>
      <td>$${entry.cost.toFixed(2)}</td>
      <td class="trash-icon" onclick="deleteEntry(${index})">üóëÔ∏è</td>
    `;tableBody.appendChild(row)});document.getElementById("totalCost").textContent=`$${totalCost.toFixed(2)}`}function deleteEntry(index){const removedEntry=chargeHistory.splice(index,1)[0];totalCost-=removedEntry.cost;localStorage.setItem("chargeHistory",JSON.stringify(chargeHistory));renderHistory()}function calculateAndAdd(){const batteryCapacity=parseFloat(document.getElementById("batteryCapacity").value);const electricityCost=parseFloat(document.getElementById("electricityCost").value);const currentPercentage=parseFloat(document.getElementById("currentPercentage").value);const chargeDate=document.getElementById("chargeDate").value;if(!chargeDate){alert("Please select a date of charge.");return}const chargeToFull=document.getElementById("chargeToFull").checked;let endPercentage=100;if(!chargeToFull){endPercentage=parseFloat(document.getElementById("endPercentage").value);if(isNaN(endPercentage)||endPercentage<=currentPercentage||endPercentage>100){alert("Please enter a valid end percentage greater than current percentage and less than or equal to 100.");return}}const percentCharged=endPercentage-currentPercentage;const kWhNeeded=batteryCapacity*(percentCharged/100);const cost=kWhNeeded*electricityCost;const newEntry={date:chargeDate,kWh:kWhNeeded,cost:cost,percentCharged:percentCharged};chargeHistory.push(newEntry);localStorage.setItem("chargeHistory",JSON.stringify(chargeHistory));totalCost+=cost;renderHistory();document.getElementById("chargingForm").reset();document.getElementById("chargeToFull").checked=true;toggleEndPercentage()}initializeCarMake();renderHistory();